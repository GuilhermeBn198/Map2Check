        -:    0:Source:output/instrumented_for_bounded_loop1.c
        -:    0:Graph:output/a-harness.gcno
        -:    0:Data:output/a-harness.gcda
        -:    0:Runs:1
        -:    1:#ifdef GCOV
        -:    2:extern void __gcov_dump(void);
        -:    3:#endif
        -:    4:extern void abort(void);
        -:    5:extern void __assert_fail(const char *, const char *, unsigned int, const char *) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));
function reach_error called 1 returned 0% blocks executed 100%
        1:    6:void reach_error() {
        -:    7:#ifdef GCOV
        1:    8: __gcov_dump();
call    0 returned 0
        -:    9: #endif
    #####:   10: __assert_fail("0", "for_bounded_loop1.c", 3, "reach_error"); }
        -:   11:
        -:   12:extern void abort(void);
function assume_abort_if_not called 0 returned 0% blocks executed 0%
    #####:   13:void assume_abort_if_not(int cond) {
    #####:   14:  if(!cond) {
branch  0 never executed
branch  1 never executed
    #####:   15:goto Goal_1;
    #####:   16:Goal_1:;
        -:   17:{
        -:   18:#ifdef GCOV
    #####:   19:__gcov_dump();
call    0 never executed
        -:   20:#endif
    #####:   21:abort();
call    0 never executed
        -:   22:}}
        -:   23: else { 
    #####:   24:goto Goal_2;
    #####:   25:Goal_2:;
    #####:   26:}}
function __VERIFIER_assert called 3 returned 67% blocks executed 78%
        3:   27:void __VERIFIER_assert(int cond) {
        3:   28:  if (!(cond)) {
branch  0 taken 1 (fallthrough)
branch  1 taken 2
        1:   29:goto Goal_3;
        1:   30:Goal_3:;
        -:   31:
        1:   32:    ERROR: {reach_error();{
call    0 returned 0
        -:   33:#ifdef GCOV
    #####:   34:__gcov_dump();
call    0 never executed
        -:   35:#endif
    #####:   36:abort();
call    0 never executed
        -:   37:}}
        -:   38:  }
        -:   39:   else { 
        2:   40:goto Goal_4;
        2:   41:Goal_4:;
        2:   42:}return;
        -:   43:}
        -:   44:
        -:   45:int __VERIFIER_nondet_int();
        -:   46:
function main called 1 returned 0% blocks executed 75%
        1:   47:int main() {
        1:   48:  int i=0, x=0, y=0;
        1:   49:  int n=__VERIFIER_nondet_int();
call    0 returned 1
        1:   50:  if (!(n>0)) {
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:   51:goto Goal_5;
    #####:   52:Goal_5:;
    #####:   53: return 0;
        -:   54:}
        -:   55:   else { 
        1:   56:goto Goal_6;
        1:   57:Goal_6:;
        2:   58:}for(i=0; i<n; i++)
branch  0 taken 1
branch  1 taken 1 (fallthrough)
        -:   59:  {
        1:   60:goto Goal_7;
        1:   61:Goal_7:;
        -:   62:
        1:   63:    x = x-y;
        1:   64:    __VERIFIER_assert(x==0);
call    0 returned 1
        1:   65:    y = __VERIFIER_nondet_int();
call    0 returned 1
        1:   66:    if (!(y!=0)) {
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:   67:goto Goal_9;
    #####:   68:Goal_9:;
    #####:   69: return 0;
        -:   70:}
        -:   71:     else { 
        1:   72:goto Goal_10;
        1:   73:Goal_10:;
        1:   74:}x = x+y;
        1:   75:    __VERIFIER_assert(x!=0);
call    0 returned 1
        -:   76:  }
        -:   77:  
        1:   78:goto Goal_8;
        1:   79:Goal_8:;
        1:   80:__VERIFIER_assert(x==0);
call    0 returned 0
        -:   81:}
