        -:    0:Source:output/instrumented_gcd_1+newton_2_6.i
        -:    0:Graph:output/a-harness.gcno
        -:    0:Data:output/a-harness.gcda
        -:    0:Runs:1
        -:    1:#ifdef GCOV
        -:    2:extern void __gcov_dump(void);
        -:    3:#endif
        -:    4:// This file is part of the SV-Benchmarks collection of verification tasks:
        -:    5:// https://gitlab.com/sosy-lab/benchmarking/sv-benchmarks
        -:    6://
        -:    7:// SPDX-FileCopyrightText: 2001-2016 Daniel Kroening, Computer Science Department, University of Oxford
        -:    8:// SPDX-FileCopyrightText: 2001-2016 Edmund Clarke, Computer Science Department, Carnegie Mellon University
        -:    9:// SPDX-FileCopyrightText: 2012 FBK-ES <https://es.fbk.eu/>
        -:   10:// SPDX-FileCopyrightText: 2012-2021 The SV-Benchmarks Community
        -:   11://
        -:   12:// SPDX-License-Identifier: Apache-2.0
        -:   13:// SPDX-License-Identifier: LicenseRef-BSD-4-Clause-Attribution-Kroening-Clarke
        -:   14:
        -:   15:extern unsigned int __VERIFIER_nondet_uint();
        -:   16:extern char __VERIFIER_nondet_char();
        -:   17:extern int __VERIFIER_nondet_int();
        -:   18:extern long __VERIFIER_nondet_long();
        -:   19:extern unsigned long __VERIFIER_nondet_ulong();
        -:   20:extern float __VERIFIER_nondet_float();
        -:   21:extern void exit(int);
        -:   22:
        -:   23:extern void abort(void);
        -:   24:extern void __assert_fail(const char *, const char *, unsigned int, const char *) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));
function reach_error called 0 returned 0% blocks executed 0%
    #####:   25:void reach_error() {
        -:   26:#ifdef GCOV
    #####:   27: __gcov_dump();
call    0 never executed
        -:   28: #endif
    #####:   29: __assert_fail("0", "gcd_1.c", 3, "reach_error"); }
        -:   30:
        -:   31:extern char __VERIFIER_nondet_char(void);
function __VERIFIER_assert called 0 returned 0% blocks executed 0%
    #####:   32:void __VERIFIER_assert(int cond) {
    #####:   33:  if (!(cond)) {
branch  0 never executed
branch  1 never executed
    #####:   34:goto Goal_1;
    #####:   35:Goal_1:;
        -:   36:
    #####:   37:    ERROR: {reach_error();{
call    0 never executed
        -:   38:#ifdef GCOV
    #####:   39:__gcov_dump();
call    0 never executed
        -:   40:#endif
    #####:   41:abort();
call    0 never executed
        -:   42:}}
        -:   43:  }
        -:   44:   else { 
    #####:   45:goto Goal_2;
    #####:   46:Goal_2:;
    #####:   47:}return;
        -:   48:}
function gcd_test called 0 returned 0% blocks executed 0%
    #####:   49:signed char gcd_test(signed char a, signed char b)
        -:   50:{
        -:   51:    signed char t;
        -:   52:
    #####:   53:    if (a < 0) {
branch  0 never executed
branch  1 never executed
    #####:   54:goto Goal_3;
    #####:   55:Goal_3:;
    #####:   56: a = -a;
        -:   57:}
        -:   58:     else { 
    #####:   59:goto Goal_4;
    #####:   60:Goal_4:;
    #####:   61:}if (b < 0) {
branch  0 never executed
branch  1 never executed
    #####:   62:goto Goal_5;
    #####:   63:Goal_5:;
    #####:   64: b = -b;
        -:   65:}
        -:   66:
        -:   67:     else { 
    #####:   68:goto Goal_6;
    #####:   69:Goal_6:;
    #####:   70:}while (b != 0) {
branch  0 never executed
branch  1 never executed
    #####:   71:goto Goal_7;
    #####:   72:Goal_7:;
        -:   73:
    #####:   74:        t = b;
    #####:   75:        b = a % b;
    #####:   76:        a = t;
        -:   77:    }
        -:   78:    
    #####:   79:goto Goal_8;
    #####:   80:Goal_8:;
    #####:   81:return a;
        -:   82:}
        -:   83:
        -:   84:
function main1 called 0 returned 0% blocks executed 0%
    #####:   85:int main1()
        -:   86:{
    #####:   87:    signed char x = __VERIFIER_nondet_char();
call    0 never executed
    #####:   88:    signed char y = __VERIFIER_nondet_char();
call    0 never executed
        -:   89:    signed char g;
        -:   90:
    #####:   91:    if (y > 0 && x % y == 0) {
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:   92:goto Goal_9;
    #####:   93:Goal_9:;
        -:   94:
    #####:   95:        g = gcd_test(x, y);
call    0 never executed
        -:   96:
    #####:   97:        __VERIFIER_assert(g == y);
call    0 never executed
        -:   98:    }
        -:   99:
        -:  100:     else { 
    #####:  101:goto Goal_10;
    #####:  102:Goal_10:;
    #####:  103:}return 0;
        -:  104:}
        -:  105:
        -:  106:extern void abort(void);
        -:  107:
        -:  108:extern void __assert_fail (const char *__assertion, const char *__file,
        -:  109:      unsigned int __line, const char *__function)
        -:  110:     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));
        -:  111:extern void __assert_perror_fail (int __errnum, const char *__file,
        -:  112:      unsigned int __line, const char *__function)
        -:  113:     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));
        -:  114:extern void __assert (const char *__assertion, const char *__file, int __line)
        -:  115:     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));
        -:  116:
        -:  117:extern void abort(void);
function assume_abort_if_not called 0 returned 0% blocks executed 0%
    #####:  118:void assume_abort_if_not(int cond) {
    #####:  119:  if(!cond) {
branch  0 never executed
branch  1 never executed
    #####:  120:goto Goal_11;
    #####:  121:Goal_11:;
        -:  122:{
        -:  123:#ifdef GCOV
    #####:  124:__gcov_dump();
call    0 never executed
        -:  125:#endif
    #####:  126:abort();
call    0 never executed
        -:  127:}}
        -:  128: else { 
    #####:  129:goto Goal_12;
    #####:  130:Goal_12:;
    #####:  131:}}
        -:  132:extern float __VERIFIER_nondet_float(void);
function f called 0 returned 0% blocks executed 0%
    #####:  133:float f(float x)
        -:  134:{
    #####:  135:  return x - (x*x*x)/6.0f + (x*x*x*x*x)/120.0f + (x*x*x*x*x*x*x)/5040.0f;
        -:  136:}
        -:  137:
function fp called 0 returned 0% blocks executed 0%
    #####:  138:float fp(float x)
        -:  139:{
    #####:  140:  return 1 - (x*x)/2.0f + (x*x*x*x)/24.0f + (x*x*x*x*x*x)/720.0f;
        -:  141:}
        -:  142:
function main2 called 0 returned 0% blocks executed 0%
    #####:  143:int main2()
        -:  144:{
    #####:  145:  float IN = __VERIFIER_nondet_float();
call    0 never executed
    #####:  146:  assume_abort_if_not(IN > -1.2f && IN < 1.2f);
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
        -:  147:
    #####:  148:  float x = IN - f(IN)/fp(IN);
call    0 never executed
call    1 never executed
        -:  149:
    #####:  150:  x = x - f(x)/fp(x);
call    0 never executed
call    1 never executed
        -:  151:
        -:  152:
        -:  153:
        -:  154:
        -:  155:
    #####:  156:  if(!(x < 0.1))
branch  0 never executed
branch  1 never executed
        -:  157:    {
    #####:  158:goto Goal_13;
    #####:  159:Goal_13:;
    #####:  160:reach_error();}
call    0 never executed
        -:  161:
        -:  162:   else { 
    #####:  163:goto Goal_14;
    #####:  164:Goal_14:;
    #####:  165:}return 0;
        -:  166:}
function main called 1 returned 0% blocks executed 25%
        1:  167:int main()
        -:  168:{
       1*:  169:  if(__VERIFIER_nondet_int()) {
call    0 returned 0
branch  1 never executed
branch  2 never executed
    #####:  170:goto Goal_15;
    #####:  171:Goal_15:;
        -:  172:
    #####:  173:    main1();
call    0 never executed
        -:  174:  } else {
    #####:  175:goto Goal_16;
    #####:  176:Goal_16:;
        -:  177:
    #####:  178:    main2();
call    0 never executed
        -:  179:}
        -:  180:}
